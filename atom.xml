<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>平头哥的客人</title>
  
  <subtitle>个人博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://dengciping0716.github.io/"/>
  <updated>2019-04-05T14:10:58.650Z</updated>
  <id>https://dengciping0716.github.io/</id>
  
  <author>
    <name>邓慈平</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Android JNI之cocos2D源码分析</title>
    <link href="https://dengciping0716.github.io/b2dd0a04/"/>
    <id>https://dengciping0716.github.io/b2dd0a04/</id>
    <published>2019-04-05T11:21:12.000Z</published>
    <updated>2019-04-05T14:10:58.650Z</updated>
    
    <content type="html"><![CDATA[<p>Cocos2d 做为一个跨平台的游戏引擎，对于Android中java与C的互相调用很有借鉴意义。本文只分析一下Cocos2d JNI 部分的封装代码。</p><h3 id="代码结构"><a href="#代码结构" class="headerlink" title="代码结构"></a>代码结构</h3><pre><code>关于多平台的主要目录</code></pre><ul><li><strong>cocos</strong> 主要源码<ul><li><strong>platform</strong> 支持不同平台的项目源码<ul><li>android</li><li>ios</li><li>…</li></ul></li></ul></li><li><strong>external</strong> cocos依赖的一些第三方开源工具，比如openssl、freetype 等</li></ul><h3 id="C-调用-java"><a href="#C-调用-java" class="headerlink" title="C++ 调用 java"></a>C++ 调用 java</h3><pre><code>cocos2d-x引擎对jni的操作进行了封装，提供了一个非常好用的类:JniHelper，定义了一些常用的接口</code></pre><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"> <span class="keyword">typedef</span> <span class="built_in">std</span>::<span class="built_in">unordered_map</span>&lt;JNIEnv*, <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;jobject&gt;&gt; LocalRefMapType;</span><br><span class="line"></span><br><span class="line"> <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">setJavaVM</span><span class="params">(JavaVM *javaVM)</span></span>;</span><br><span class="line"> <span class="function"><span class="keyword">static</span> JavaVM* <span class="title">getJavaVM</span><span class="params">()</span></span>;</span><br><span class="line"> <span class="function"><span class="keyword">static</span> JNIEnv* <span class="title">getEnv</span><span class="params">()</span></span>;</span><br><span class="line"> <span class="function"><span class="keyword">static</span> jobject <span class="title">getActivity</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"> <span class="function"><span class="keyword">static</span> <span class="keyword">bool</span> <span class="title">setClassLoaderFrom</span><span class="params">(jobject activityInstance)</span></span>;</span><br><span class="line"> <span class="function"><span class="keyword">static</span> <span class="keyword">bool</span> <span class="title">getStaticMethodInfo</span><span class="params">(JniMethodInfo &amp;methodinfo,</span></span></span><br><span class="line"><span class="function"><span class="params">                                 <span class="keyword">const</span> <span class="keyword">char</span> *className,</span></span></span><br><span class="line"><span class="function"><span class="params">                                 <span class="keyword">const</span> <span class="keyword">char</span> *methodName,</span></span></span><br><span class="line"><span class="function"><span class="params">                                 <span class="keyword">const</span> <span class="keyword">char</span> *paramCode)</span></span>;</span><br><span class="line"> <span class="function"><span class="keyword">static</span> <span class="keyword">bool</span> <span class="title">getMethodInfo</span><span class="params">(JniMethodInfo &amp;methodinfo,</span></span></span><br><span class="line"><span class="function"><span class="params">                             <span class="keyword">const</span> <span class="keyword">char</span> *className,</span></span></span><br><span class="line"><span class="function"><span class="params">                             <span class="keyword">const</span> <span class="keyword">char</span> *methodName,</span></span></span><br><span class="line"><span class="function"><span class="params">                             <span class="keyword">const</span> <span class="keyword">char</span> *paramCode)</span></span>;</span><br><span class="line"></span><br><span class="line"> <span class="comment">//转换java 字符串为C++字符串</span></span><br><span class="line"> <span class="keyword">static</span> <span class="built_in">std</span>::<span class="function"><span class="built_in">string</span> <span class="title">jstring2string</span><span class="params">(jstring str)</span></span>;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">static</span> jmethodID loadclassMethod_methodID;</span><br><span class="line"> <span class="keyword">static</span> jobject classloader;</span><br><span class="line"> <span class="keyword">static</span> <span class="built_in">std</span>::function&lt;<span class="keyword">void</span>()&gt; classloaderCallback;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment"> 调用java 无返回值的静态函数</span></span><br><span class="line"><span class="comment"> @brief Call of Java static void method</span></span><br><span class="line"><span class="comment"> @if no such method will log error</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> <span class="keyword">template</span> &lt;<span class="keyword">typename</span>... Ts&gt;</span><br><span class="line"> <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">callStaticVoidMethod</span><span class="params">(<span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">string</span>&amp; className, </span></span></span><br><span class="line"><span class="function"><span class="params">                                  <span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">string</span>&amp; methodName, </span></span></span><br><span class="line"><span class="function"><span class="params">                                  Ts... xs)</span> </span>&#123;</span><br><span class="line">     cocos2d::JniMethodInfo t;</span><br><span class="line">     <span class="built_in">std</span>::<span class="built_in">string</span> signature = <span class="string">"("</span> + <span class="built_in">std</span>::<span class="built_in">string</span>(getJNISignature(xs...)) + <span class="string">")V"</span>;</span><br><span class="line">     <span class="keyword">if</span> (cocos2d::JniHelper::getStaticMethodInfo(t, className.c_str(), methodName.c_str(), signature.c_str())) &#123;</span><br><span class="line">         LocalRefMapType localRefs;</span><br><span class="line">         t.env-&gt;CallStaticVoidMethod(t.classID, t.methodID, convert(localRefs, t, xs)...);</span><br><span class="line">         t.env-&gt;DeleteLocalRef(t.classID);</span><br><span class="line">         deleteLocalRefs(t.env, localRefs);</span><br><span class="line">     &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">         reportError(className, methodName, signature);</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="comment">/**========================================</span></span><br><span class="line"><span class="comment">     还有很多类似的静态函数调用</span></span><br><span class="line"><span class="comment">     callStaticBooleanMethod、callStaticIntMethod 。。。</span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment">     template &lt;typename... Ts&gt; 类似于java中的泛型</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">     通过 template &lt;typename... Ts&gt; 和 getJNISignature 根据实参自动拼接出调用java函数需要的参数类型字符串</span></span><br><span class="line"><span class="comment"> ========================================*/</span></span><br><span class="line"></span><br><span class="line"> <span class="keyword">static</span> <span class="built_in">std</span>::<span class="function"><span class="built_in">string</span> <span class="title">getJNISignature</span><span class="params">()</span> </span>&#123;</span><br><span class="line">     <span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">static</span> <span class="built_in">std</span>::<span class="function"><span class="built_in">string</span> <span class="title">getJNISignature</span><span class="params">(<span class="keyword">bool</span>)</span> </span>&#123;</span><br><span class="line">     <span class="keyword">return</span> <span class="string">"Z"</span>;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">static</span> <span class="built_in">std</span>::<span class="function"><span class="built_in">string</span> <span class="title">getJNISignature</span><span class="params">(<span class="keyword">char</span>)</span> </span>&#123;</span><br><span class="line">     <span class="keyword">return</span> <span class="string">"C"</span>;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">static</span> <span class="built_in">std</span>::<span class="function"><span class="built_in">string</span> <span class="title">getJNISignature</span><span class="params">(<span class="keyword">short</span>)</span> </span>&#123;</span><br><span class="line">     <span class="keyword">return</span> <span class="string">"S"</span>;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">static</span> <span class="built_in">std</span>::<span class="function"><span class="built_in">string</span> <span class="title">getJNISignature</span><span class="params">(<span class="keyword">int</span>)</span> </span>&#123;</span><br><span class="line">     <span class="keyword">return</span> <span class="string">"I"</span>;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">static</span> <span class="built_in">std</span>::<span class="function"><span class="built_in">string</span> <span class="title">getJNISignature</span><span class="params">(<span class="keyword">long</span>)</span> </span>&#123;</span><br><span class="line">     <span class="keyword">return</span> <span class="string">"J"</span>;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">static</span> <span class="built_in">std</span>::<span class="function"><span class="built_in">string</span> <span class="title">getJNISignature</span><span class="params">(<span class="keyword">float</span>)</span> </span>&#123;</span><br><span class="line">     <span class="keyword">return</span> <span class="string">"F"</span>;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span>  <span class="built_in">std</span>::<span class="function"><span class="built_in">string</span> <span class="title">getJNISignature</span><span class="params">(<span class="keyword">double</span>)</span> </span>&#123;</span><br><span class="line">     <span class="keyword">return</span> <span class="string">"D"</span>;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">static</span> <span class="built_in">std</span>::<span class="function"><span class="built_in">string</span> <span class="title">getJNISignature</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span>*)</span> </span>&#123;</span><br><span class="line">     <span class="keyword">return</span> <span class="string">"Ljava/lang/String;"</span>;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">static</span> <span class="built_in">std</span>::<span class="function"><span class="built_in">string</span> <span class="title">getJNISignature</span><span class="params">(<span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">string</span>&amp;)</span> </span>&#123;</span><br><span class="line">     <span class="keyword">return</span> <span class="string">"Ljava/lang/String;"</span>;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"> <span class="keyword">static</span> <span class="built_in">std</span>::<span class="function"><span class="built_in">string</span> <span class="title">getJNISignature</span><span class="params">(T x)</span> </span>&#123;</span><br><span class="line">     <span class="comment">// This template should never be instantiated</span></span><br><span class="line">     <span class="keyword">static_assert</span>(<span class="keyword">sizeof</span>(x) == <span class="number">0</span>, <span class="string">"Unsupported argument type"</span>);</span><br><span class="line">     <span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span>... Ts&gt;</span><br><span class="line"> <span class="keyword">static</span> <span class="built_in">std</span>::<span class="function"><span class="built_in">string</span> <span class="title">getJNISignature</span><span class="params">(T x, Ts... xs)</span> </span>&#123;</span><br><span class="line">     <span class="keyword">return</span> getJNISignature(x) + getJNISignature(xs...);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h3 id="java-调用C-函数"><a href="#java-调用C-函数" class="headerlink" title="java 调用C++函数"></a>java 调用C++函数</h3><p>看过java JNI 的同学应该都了解过了。这里只简单说一下大概流程不做详细赘述了。</p><ol><li>首先我们会在java 类中定义native函数<br> private static native void nativeTouchesBegin(final int id, final float x, final float y);</li><li>然后我们在c++ 中定义对应的实现函数。需要注意的是java 类型和C类型的转换。下面展示一下cocos 对触摸事件的封装。凑字数了哈哈。</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// TouchesJni.cpp</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"base/CCDirector.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"base/CCEventKeyboard.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"base/CCEventDispatcher.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"platform/android/CCGLViewImpl-android.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;android/log.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;jni.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> cocos2d;</span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> <span class="string">"C"</span> &#123;</span><br><span class="line">    <span class="function">JNIEXPORT <span class="keyword">void</span> JNICALL <span class="title">Java_org_cocos2dx_lib_Cocos2dxRenderer_nativeTouchesBegin</span><span class="params">(JNIEnv * env, jobject thiz, jint id, jfloat x, jfloat y)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">intptr_t</span> idlong = id;</span><br><span class="line">        cocos2d::Director::getInstance()-&gt;getOpenGLView()-&gt;handleTouchesBegin(<span class="number">1</span>, &amp;idlong, &amp;x, &amp;y);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function">JNIEXPORT <span class="keyword">void</span> JNICALL <span class="title">Java_org_cocos2dx_lib_Cocos2dxRenderer_nativeTouchesEnd</span><span class="params">(JNIEnv * env, jobject thiz, jint id, jfloat x, jfloat y)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">intptr_t</span> idlong = id;</span><br><span class="line">        cocos2d::Director::getInstance()-&gt;getOpenGLView()-&gt;handleTouchesEnd(<span class="number">1</span>, &amp;idlong, &amp;x, &amp;y);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function">JNIEXPORT <span class="keyword">void</span> JNICALL <span class="title">Java_org_cocos2dx_lib_Cocos2dxRenderer_nativeTouchesMove</span><span class="params">(JNIEnv * env, jobject thiz, jintArray ids, jfloatArray xs, jfloatArray ys)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> size = env-&gt;GetArrayLength(ids);</span><br><span class="line">        jint id[size];</span><br><span class="line">        jfloat x[size];</span><br><span class="line">        jfloat y[size];</span><br><span class="line"></span><br><span class="line">        env-&gt;GetIntArrayRegion(ids, <span class="number">0</span>, size, id);</span><br><span class="line">        env-&gt;GetFloatArrayRegion(xs, <span class="number">0</span>, size, x);</span><br><span class="line">        env-&gt;GetFloatArrayRegion(ys, <span class="number">0</span>, size, y);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">intptr_t</span> idlong[size];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; size; i++)</span><br><span class="line">            idlong[i] = id[i];</span><br><span class="line"></span><br><span class="line">        cocos2d::Director::getInstance()-&gt;getOpenGLView()-&gt;handleTouchesMove(size, idlong, x, y);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function">JNIEXPORT <span class="keyword">void</span> JNICALL <span class="title">Java_org_cocos2dx_lib_Cocos2dxRenderer_nativeTouchesCancel</span><span class="params">(JNIEnv * env, jobject thiz, jintArray ids, jfloatArray xs, jfloatArray ys)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> size = env-&gt;GetArrayLength(ids);</span><br><span class="line">        jint id[size];</span><br><span class="line">        jfloat x[size];</span><br><span class="line">        jfloat y[size];</span><br><span class="line"></span><br><span class="line">        env-&gt;GetIntArrayRegion(ids, <span class="number">0</span>, size, id);</span><br><span class="line">        env-&gt;GetFloatArrayRegion(xs, <span class="number">0</span>, size, x);</span><br><span class="line">        env-&gt;GetFloatArrayRegion(ys, <span class="number">0</span>, size, y);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">intptr_t</span> idlong[size];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; size; i++)</span><br><span class="line">            idlong[i] = id[i];</span><br><span class="line"></span><br><span class="line">        cocos2d::Director::getInstance()-&gt;getOpenGLView()-&gt;handleTouchesCancel(size, idlong, x, y);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> KEYCODE_BACK 0x04</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> KEYCODE_MENU 0x52</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> KEYCODE_DPAD_UP 0x13</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> KEYCODE_DPAD_DOWN 0x14</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> KEYCODE_DPAD_LEFT 0x15</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> KEYCODE_DPAD_RIGHT 0x16</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> KEYCODE_ENTER 0x42</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> KEYCODE_PLAY  0x7e</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> KEYCODE_DPAD_CENTER  0x17</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">static</span> <span class="built_in">std</span>::<span class="built_in">unordered_map</span>&lt;<span class="keyword">int</span>, cocos2d::EventKeyboard::KeyCode&gt; g_keyCodeMap = &#123;</span><br><span class="line">        &#123; KEYCODE_BACK , cocos2d::EventKeyboard::KeyCode::KEY_ESCAPE&#125;,</span><br><span class="line">        &#123; KEYCODE_MENU , cocos2d::EventKeyboard::KeyCode::KEY_MENU&#125;,</span><br><span class="line">        &#123; KEYCODE_DPAD_UP  , cocos2d::EventKeyboard::KeyCode::KEY_DPAD_UP &#125;,</span><br><span class="line">        &#123; KEYCODE_DPAD_DOWN , cocos2d::EventKeyboard::KeyCode::KEY_DPAD_DOWN &#125;,</span><br><span class="line">        &#123; KEYCODE_DPAD_LEFT , cocos2d::EventKeyboard::KeyCode::KEY_DPAD_LEFT &#125;,</span><br><span class="line">        &#123; KEYCODE_DPAD_RIGHT , cocos2d::EventKeyboard::KeyCode::KEY_DPAD_RIGHT &#125;,</span><br><span class="line">        &#123; KEYCODE_ENTER  , cocos2d::EventKeyboard::KeyCode::KEY_ENTER&#125;,</span><br><span class="line">        &#123; KEYCODE_PLAY  , cocos2d::EventKeyboard::KeyCode::KEY_PLAY&#125;,</span><br><span class="line">        &#123; KEYCODE_DPAD_CENTER  , cocos2d::EventKeyboard::KeyCode::KEY_DPAD_CENTER&#125;,</span><br><span class="line">        </span><br><span class="line">    &#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="function">JNIEXPORT jboolean JNICALL <span class="title">Java_org_cocos2dx_lib_Cocos2dxRenderer_nativeKeyEvent</span><span class="params">(JNIEnv * env, jobject thiz, jint keyCode, jboolean isPressed)</span> </span>&#123;</span><br><span class="line">        Director* pDirector = Director::getInstance();</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">auto</span> iterKeyCode = g_keyCodeMap.find(keyCode);</span><br><span class="line">        <span class="keyword">if</span> (iterKeyCode == g_keyCodeMap.end()) &#123;</span><br><span class="line">            <span class="keyword">return</span> JNI_FALSE;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        cocos2d::EventKeyboard::KeyCode cocos2dKey = g_keyCodeMap.at(keyCode);</span><br><span class="line">        cocos2d::<span class="function">EventKeyboard <span class="title">event</span><span class="params">(cocos2dKey, isPressed)</span></span>;</span><br><span class="line">        cocos2d::Director::getInstance()-&gt;getEventDispatcher()-&gt;dispatchEvent(&amp;event);</span><br><span class="line">        <span class="keyword">return</span> JNI_TRUE;</span><br><span class="line">        </span><br><span class="line">    &#125;&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Cocos2d 做为一个跨平台的游戏引擎，对于Android中java与C的互相调用很有借鉴意义。本文只分析一下Cocos2d JNI 部分的封装代码。&lt;/p&gt;
&lt;h3 id=&quot;代码结构&quot;&gt;&lt;a href=&quot;#代码结构&quot; class=&quot;headerlink&quot; title=&quot;
      
    
    </summary>
    
      <category term="Android" scheme="https://dengciping0716.github.io/categories/android/"/>
    
    
      <category term="JNI" scheme="https://dengciping0716.github.io/tags/JNI/"/>
    
  </entry>
  
  <entry>
    <title>常用shell命令</title>
    <link href="https://dengciping0716.github.io/e2fa9704/"/>
    <id>https://dengciping0716.github.io/e2fa9704/</id>
    <published>2019-03-27T09:33:06.000Z</published>
    <updated>2019-04-05T13:56:19.096Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-压缩-解压缩"><a href="#1-压缩-解压缩" class="headerlink" title="1. 压缩/解压缩"></a>1. 压缩/解压缩</h2><hr><h3 id="zip"><a href="#zip" class="headerlink" title="zip"></a>zip</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 把mydata目录压缩为mydata.zip</span><br><span class="line">zip -r mydata.zip mydata</span><br><span class="line"></span><br><span class="line"># 把abc文件夹和123.txt压缩成为abc123.zip</span><br><span class="line">zip -r abc123.zip abc 123.txt</span><br></pre></td></tr></table></figure><h3 id="unzip"><a href="#unzip" class="headerlink" title="unzip"></a>unzip</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># 把zip解压到xxx目录里面</span><br><span class="line">unzip xxx.zip -d 目录</span><br><span class="line"></span><br><span class="line"># 把abc12.zip、abc23.zip、abc34.zip同时解压到目录里面</span><br><span class="line">unzip abc\*.zip</span><br><span class="line"></span><br><span class="line"># 查看zip里面的内容</span><br><span class="line">unzip -v xxx.zip</span><br><span class="line"></span><br><span class="line"># 验证zip是否完整</span><br><span class="line">unzip -t xxx.zip</span><br><span class="line"></span><br><span class="line"># 把zip里面的所有文件解压到第一级目录</span><br><span class="line">unzip -j xxx.zip</span><br></pre></td></tr></table></figure><h3 id="tar"><a href="#tar" class="headerlink" title="tar"></a>tar</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">常用命令选项</span><br><span class="line">-c Create </span><br><span class="line">-r Add/Replace </span><br><span class="line">-t List  </span><br><span class="line">-u Update  </span><br><span class="line">-x Extract 提取</span><br><span class="line">-v ：细报告tar处理的文件信息。如无此选项，tar不报告文件信息。 </span><br><span class="line">-f ：存档位置</span><br><span class="line"></span><br><span class="line"># 压缩</span><br><span class="line">tar czvf home.tar.gz /home</span><br><span class="line"></span><br><span class="line">#解压缩</span><br><span class="line">tar xzvf home.tar.gz</span><br></pre></td></tr></table></figure><h2 id="2-scp-传输文件"><a href="#2-scp-传输文件" class="headerlink" title="2. scp 传输文件"></a>2. scp 传输文件</h2><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 复制本地目录到远程</span><br><span class="line">scp -r local_folder remote_username@remote_ip:remote_folder  </span><br><span class="line"></span><br><span class="line"># 拉取远程目录到本地</span><br><span class="line">scp -r remote_username@remote_ip:remote_folder local_folder</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-压缩-解压缩&quot;&gt;&lt;a href=&quot;#1-压缩-解压缩&quot; class=&quot;headerlink&quot; title=&quot;1. 压缩/解压缩&quot;&gt;&lt;/a&gt;1. 压缩/解压缩&lt;/h2&gt;&lt;hr&gt;
&lt;h3 id=&quot;zip&quot;&gt;&lt;a href=&quot;#zip&quot; class=&quot;headerl
      
    
    </summary>
    
      <category term="shell" scheme="https://dengciping0716.github.io/categories/shell/"/>
    
    
      <category term="shell" scheme="https://dengciping0716.github.io/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>Hexo实战记录(四): 常用命令</title>
    <link href="https://dengciping0716.github.io/9e4e42dc/"/>
    <id>https://dengciping0716.github.io/9e4e42dc/</id>
    <published>2019-03-18T13:52:35.000Z</published>
    <updated>2019-04-05T14:19:42.329Z</updated>
    
    <content type="html"><![CDATA[<h3 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h3><ul><li><code>hexo g</code> 生成/public 文件夹，里面是网站</li><li><code>hexo g -d</code> 生成/public 文件夹，里面是网站 ,文件生成后立即部署网站</li><li><code>hexo d -g</code> 把这个网站文件夹推送到服务器</li><li><code>hexo clean</code> 删除网站文件夹</li><li><code>hexo s</code> 本地查看效果</li></ul><h3 id="新建一篇文章"><a href="#新建一篇文章" class="headerlink" title="新建一篇文章"></a>新建一篇文章</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure><p>新建一篇文章。如果没有设置 layout 的话，默认使用 _config.yml 中的 default_layout 参数代替。如果标题包含空格的话，请使用引号括起来。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;基本操作&quot;&gt;&lt;a href=&quot;#基本操作&quot; class=&quot;headerlink&quot; title=&quot;基本操作&quot;&gt;&lt;/a&gt;基本操作&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;hexo g&lt;/code&gt; 生成/public 文件夹，里面是网站&lt;/li&gt;
&lt;li&gt;&lt;code&gt;h
      
    
    </summary>
    
      <category term="hexo" scheme="https://dengciping0716.github.io/categories/hexo/"/>
    
    
      <category term="hexo" scheme="https://dengciping0716.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo实战记录(三)：next主题配置</title>
    <link href="https://dengciping0716.github.io/7009eb85/"/>
    <id>https://dengciping0716.github.io/7009eb85/</id>
    <published>2019-03-17T14:38:37.000Z</published>
    <updated>2019-04-05T14:06:49.891Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><a href="https://theme-next.org/docs/getting-started/" target="_blank" rel="noopener">next 官网文档</a></p></blockquote><h2 id="配置主题风格"><a href="#配置主题风格" class="headerlink" title="配置主题风格"></a>配置主题风格</h2><p>这里我选择一种紧凑风格<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Scheme Settings</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># Schemes</span><br><span class="line"># scheme: Muse</span><br><span class="line"># scheme: Mist</span><br><span class="line"># scheme: Pisces</span><br><span class="line">scheme: Gemini</span><br></pre></td></tr></table></figure></p><a id="more"></a><h2 id="配置分类和标签页面"><a href="#配置分类和标签页面" class="headerlink" title="配置分类和标签页面"></a>配置分类和标签页面</h2><ol><li><p>配置 导航条 出现分类和标签<br>修改theme/next/_config.yml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: / || home</span><br><span class="line">  #about: /about/ || user</span><br><span class="line">  tags: /tags/ || tags</span><br><span class="line">  categories: /categories/ || th</span><br><span class="line">  archives: /archives/ || archive</span><br></pre></td></tr></table></figure></li><li><p>创建页面</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo new page categories</span><br><span class="line">hexo new page tags</span><br></pre></td></tr></table></figure></li><li><p>编辑 source/tags/index.md 和 source/categories/index.md</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#type 为tags 或者 categories 和功能对应</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">comments: false</span><br></pre></td></tr></table></figure></li></ol><h2 id="配置-github-等社交链接"><a href="#配置-github-等社交链接" class="headerlink" title="配置 github 等社交链接"></a>配置 github 等社交链接</h2><p>修改theme/next/_config.yml<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># Social Links</span><br><span class="line"># Usage: `Key: permalink || icon`</span><br><span class="line"># Key is the link label showing to end users.</span><br><span class="line"># Value before `||` delimeter is the target permalink.</span><br><span class="line"># Value after `||` delimeter is the name of FontAwesome icon. If icon (with or without delimeter) is not specified, globe icon will be loaded.</span><br><span class="line">social:</span><br><span class="line">  #GitHub: https://github.com/yourname || github</span><br><span class="line">  #E-Mail: mailto:yourname@gmail.com || envelope</span><br></pre></td></tr></table></figure></p><h2 id="设置首页不显示全文-只显示预览"><a href="#设置首页不显示全文-只显示预览" class="headerlink" title="设置首页不显示全文(只显示预览)"></a>设置首页不显示全文(只显示预览)</h2><p>修改theme/next/_config.yml<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Automatically Excerpt. Not recommend.</span><br><span class="line"># Use &lt;!-- more --&gt; in the post to control excerpt accurately.</span><br><span class="line">auto_excerpt:</span><br><span class="line">  enable: true</span><br><span class="line">  length: 150</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://theme-next.org/docs/getting-started/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;next 官网文档&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;配置主题风格&quot;&gt;&lt;a href=&quot;#配置主题风格&quot; class=&quot;headerlink&quot; title=&quot;配置主题风格&quot;&gt;&lt;/a&gt;配置主题风格&lt;/h2&gt;&lt;p&gt;这里我选择一种紧凑风格&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# ---------------------------------------------------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Scheme Settings&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# ---------------------------------------------------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Schemes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# scheme: Muse&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# scheme: Mist&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# scheme: Pisces&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;scheme: Gemini&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="hexo" scheme="https://dengciping0716.github.io/categories/hexo/"/>
    
    
      <category term="hexo" scheme="https://dengciping0716.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo实战记录(二)：写作配置</title>
    <link href="https://dengciping0716.github.io/61542/"/>
    <id>https://dengciping0716.github.io/61542/</id>
    <published>2019-03-16T13:37:21.000Z</published>
    <updated>2019-04-05T14:31:09.849Z</updated>
    
    <content type="html"><![CDATA[<h2 id="命令：创建一篇文章"><a href="#命令：创建一篇文章" class="headerlink" title="命令：创建一篇文章"></a>命令：创建一篇文章</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure><h2 id="文章链接唯一化"><a href="#文章链接唯一化" class="headerlink" title="文章链接唯一化"></a>文章链接唯一化</h2><ul><li>方案1 使用插件 <a href="https://github.com/rozbo/hexo-abbrlink" target="_blank" rel="noopener">hexo-abbrlink</a> </li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 安装</span><br><span class="line">npm install hexo-abbrlink --save</span><br><span class="line">#使用：修改_config.yml</span><br><span class="line">permalink: :abbrlink/</span><br></pre></td></tr></table></figure><a id="more"></a><ul><li>方案2 修改文章网址配置</li></ul><ol><li><code>_config.yml</code> 文件中修改 permalink</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#这是原配置</span><br><span class="line">#permalink: :year/:month/:day/:title </span><br><span class="line"></span><br><span class="line">#修改之后</span><br><span class="line">permalink: :category/:id/</span><br></pre></td></tr></table></figure><ol start="2"><li><code>.\scaffolds\post.md</code> 模板文件中修改为:</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line">date: &#123;&#123; date &#125;&#125;</span><br><span class="line">update : &#123;&#123;date&#125;&#125;</span><br><span class="line">categories: </span><br><span class="line">tags:</span><br><span class="line"></span><br><span class="line">#增加手写ID值</span><br><span class="line">id:</span><br></pre></td></tr></table></figure><h3 id="category-map实现分组映射"><a href="#category-map实现分组映射" class="headerlink" title="category_map实现分组映射"></a>category_map实现分组映射</h3><p>让中文分组名在网址中显示为英文</p><p>修改博客配置文件<code>_config.yml</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">## 为了让中文分组名在网址中显示为英文，我们可以创建分组名映射（category_map）：</span><br><span class="line">category_map:</span><br><span class="line">  Android基础: android-base</span><br><span class="line">  Hexo: hexo</span><br><span class="line"># tag_map 同理设置</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;命令：创建一篇文章&quot;&gt;&lt;a href=&quot;#命令：创建一篇文章&quot; class=&quot;headerlink&quot; title=&quot;命令：创建一篇文章&quot;&gt;&lt;/a&gt;命令：创建一篇文章&lt;/h2&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;$&lt;/span&gt; hexo new [layout] &amp;lt;title&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;文章链接唯一化&quot;&gt;&lt;a href=&quot;#文章链接唯一化&quot; class=&quot;headerlink&quot; title=&quot;文章链接唯一化&quot;&gt;&lt;/a&gt;文章链接唯一化&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;方案1 使用插件 &lt;a href=&quot;https://github.com/rozbo/hexo-abbrlink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;hexo-abbrlink&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# 安装&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm install hexo-abbrlink --save&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#使用：修改_config.yml&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;permalink: :abbrlink/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="hexo" scheme="https://dengciping0716.github.io/categories/hexo/"/>
    
    
  </entry>
  
  <entry>
    <title>Hexo实战记录(一)：安装配置</title>
    <link href="https://dengciping0716.github.io/30720/"/>
    <id>https://dengciping0716.github.io/30720/</id>
    <published>2019-03-15T11:30:55.000Z</published>
    <updated>2019-04-05T13:49:22.763Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>​ <a href="https://hexo.io/zh-cn/index.html" target="_blank" rel="noopener">官网</a></p><h3 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h3><ul><li><code>hexo g</code> 生成/public 文件夹，里面是网站</li><li><code>hexo d</code> 把这个网站文件夹推送到服务器</li><li><code>hexo clean</code> 删除网站文件夹</li><li><code>hexo s</code> 本地查看效果</li></ul><a id="more"></a><h3 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h3><blockquote><p>这里我选择用 next 主题。<a href="https://theme-next.org/docs/getting-started/" target="_blank" rel="noopener">查看主题配置</a></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#进入项目根目录</span><br><span class="line">git clone https://github.com/theme-next/hexo-theme-next themes/next</span><br><span class="line"></span><br><span class="line"># 修改 _config.yml 配置</span><br><span class="line">theme: next</span><br></pre></td></tr></table></figure><h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h3><p><a href="https://hexo.io/plugins/" target="_blank" rel="noopener">官网插件列表</a></p><p>常用插件：</p><p><a href="https://github.com/rozbo/hexo-abbrlink" target="_blank" rel="noopener">hexo-abbrlink</a> 文章链接唯一化</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 安装</span><br><span class="line">npm install hexo-abbrlink --save</span><br><span class="line">#使用：修改_config.yml</span><br><span class="line">permalink: :abbrlink/</span><br></pre></td></tr></table></figure><p><a href="https://link.jianshu.com?t=https://github.com/willin/hexo-wordcount" target="_blank" rel="noopener">hexo-wordcount </a> 字数统计</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-wordcount --save</span><br></pre></td></tr></table></figure><p><a href="https://link.jianshu.com?t=https://github.com/alexbruno/hexo-generator-json-content" target="_blank" rel="noopener">hexo-generator-json-content</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-json-content --save</span><br></pre></td></tr></table></figure><p><a href="https://link.jianshu.com?t=https://github.com/hexojs/hexo-generator-feed" target="_blank" rel="noopener">hexo-generator-feed</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure><p><a href="https://link.jianshu.com?t=https://github.com/hexojs/hexo-generator-sitemap" target="_blank" rel="noopener">hexo-generator-sitemap</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure><p><a href="https://link.jianshu.com?t=https://github.com/rozbo/hexo-neat" target="_blank" rel="noopener">hexo-neat</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-neat --save</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h3&gt;&lt;p&gt;​ &lt;a href=&quot;https://hexo.io/zh-cn/index.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;官网&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;基本操作&quot;&gt;&lt;a href=&quot;#基本操作&quot; class=&quot;headerlink&quot; title=&quot;基本操作&quot;&gt;&lt;/a&gt;基本操作&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;hexo g&lt;/code&gt; 生成/public 文件夹，里面是网站&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hexo d&lt;/code&gt; 把这个网站文件夹推送到服务器&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hexo clean&lt;/code&gt; 删除网站文件夹&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hexo s&lt;/code&gt; 本地查看效果&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="hexo" scheme="https://dengciping0716.github.io/categories/hexo/"/>
    
    
      <category term="hexo" scheme="https://dengciping0716.github.io/tags/hexo/"/>
    
  </entry>
  
</feed>
